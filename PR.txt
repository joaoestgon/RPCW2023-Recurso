## Exercício 1:

    1. Tratamento do dataset fornecido:
        -> Removi alguns caracteres que não estavam em utf-8
        -> Fiz um script python para...

    2. Criação da base de dados e das coleções
        -> Comando: mongoimport -d -c --jsonArray 

    3. Criação do servidor em nodejs 
        -> Comando: "npx express-generator --view=pug ex1"
        -> Fui para a pasta '/ex1' e instalei as dependências com "npm i"
        -> Instalei os módulos necessários:
            - "npm i mongoose --save"
            - "npm i nodemon --save-dev"
        -> Acrescentei um modo de "development" (dev) no package.json
        -> O servidor pode ser lançado com "npm start" e fica à escuta na porta XXX

## Repostas

#### 1. db.repairs.find().count() 

R: 5000

#### 2. db.repairs.count({ "viatura.marca": "Cadillac" })

R: 91


#### 3. db.repairs.aggregate([{ $group: { _id: "$viatura.marca" } },{ $sort: { _id: 1 } }])

#### 4. db.repairs.aggregate([{ $unwind: "$intervencoes" },{ $group: { _id: "$intervencoes.nome", total: { $sum: 1 } } }])

#### 5. db.repairs.aggregate([{ $group: { _id: { $year: { $dateFromString: { dateString: "$data" } } }, count: { $sum: 1 } } },{ $sort: { _id: 1 } }])

## Exercício 2

    1. Criação do servidor em nodejs 
        -> Comando: "npx express-generator --view=pug ex2"
        -> Fui para a pasta e instalei as dependências com "npm i"
        -> Instalei os módulos necessários:
            - "npm i axios --save" 
            - "npm i nodemon --save-dev"
        -> Acrescentei um modo de "development" (dev) no package.json
        -> O servidor pode ser lançado com "npm start" e fica à escuta na porta XXX